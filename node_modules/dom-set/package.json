{
  "_args": [
    [
      {
        "raw": "dom-set@^1.0.1",
        "scope": null,
        "escapedName": "dom-set",
        "name": "dom-set",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "D:\\erget\\node_modules\\dom-autoscroller"
    ]
  ],
  "_from": "dom-set@>=1.0.1 <2.0.0",
  "_id": "dom-set@1.1.1",
  "_inCache": true,
  "_location": "/dom-set",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/dom-set-1.1.1.tgz_1495866822218_0.4796005629468709"
  },
  "_npmUser": {
    "name": "hollowdoor",
    "email": "hollowdoor99@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dom-set@^1.0.1",
    "scope": null,
    "escapedName": "dom-set",
    "name": "dom-set",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/dom-autoscroller"
  ],
  "_resolved": "http://registry.npmjs.org/dom-set/-/dom-set-1.1.1.tgz",
  "_shasum": "5c2c610ee4839b520ed5f98ddbcbe314c0fa954a",
  "_shrinkwrap": null,
  "_spec": "dom-set@^1.0.1",
  "_where": "D:\\erget\\node_modules\\dom-autoscroller",
  "author": {
    "name": "Quentin Engles",
    "email": "hollowdoor99@gmail.com"
  },
  "dependencies": {
    "array-from": "^2.1.1",
    "is-array": "^1.0.1",
    "iselement": "^1.1.4"
  },
  "description": "Create functions for operating on a list of DOM elements",
  "devDependencies": {
    "rollup-plugin-buble": "^0.15.0",
    "rollup-plugin-commonjs": "^5.0.5",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-plugin-uglify": "^1.0.1",
    "uglify-js": "^2.7.4"
  },
  "directories": {},
  "dist": {
    "shasum": "5c2c610ee4839b520ed5f98ddbcbe314c0fa954a",
    "tarball": "https://registry.npmjs.org/dom-set/-/dom-set-1.1.1.tgz"
  },
  "gitHead": "140f5ad324e161a3c7ff5c4ee19c53316c793674",
  "jsnext:main": "dist/bundle.es.js",
  "license": "WTFPL",
  "main": "dist/bundle.js",
  "maintainers": [
    {
      "name": "hollowdoor",
      "email": "hollowdoor99@gmail.com"
    }
  ],
  "name": "dom-set",
  "optionalDependencies": {},
  "readme": "Install\n-------\n\n`npm install --save dom-indexers`\n\nThe Explanation\n---------------\n\nThis library is best used with [rollup](https://github.com/rollup/rollup).\n\n`dom-set` is a collection of functions to extend other libraries that export instances of objects that have their own DOM operations.\n\nThere actually aren't any dom operations being done by this library. Only array collection operations that are meant for an array of DOM elements.\n\nUsage\n-----\n\n```html\n<!DOCTYPE html>\n<html>\n<head></head>\n<body>\n    <p class=\"thing1\"></p>\n    <p class=\"thing2\"></p>\n    <p class=\"thing3\"></p>\n\n    <script src=\"code.js\"></script>\n</body>\n</html>\n```\n\n**code.js** precompiled.\n\n```javascript\nimport {domListOf, addElements, removeElements} from 'dom-set';\n\nfunction MyOperator(elements){\n    this.elements = domListOf(elements);\n}\n\nMyOperator.prototype.add = function(elements){\n    addElements(this.elements, elements);\n    return this;\n};\nMyOperator.prototype.remove = function(elements){\n    return removeElements(this.elements, elements);\n};\n//All operations can take elements, or selectors.\nconst things = [document.querySelector('.thing1'), '.thing2'];\nconst myOps = MyOperator(things);\nmyOps.add(document.querySelector('.thing3'));\nmyOps.remove('.thing1');\n\n```\n\nSelector imports\n----------------\n\n### select(selector|element)\n\nSelect an element with `selector`, or just return `element`.\n\n### selectAll(selector|array)\n\nSelect all elements using `selector`, select one element for each selector in `array`.\n\nIf `array` has any elements in it those get returned unmodified.\n\nList imports\n------------\n\n-\tindexOfElement(array, element)\n-\thasElement(array, element)\n-\tdomListOf(array)\n-\taddElements(array, ...elements)\n-\tremoveElements(array, ...elements)\n\nThe first argument of `array` should be the javascript array that contains the elements you want to operate on.\n\nIn this documentation any where you see the words **element**, **convertible**, or **convertible value** this means the value is one of these types:\n\n-\tCSS DOM selector\n-\tDOM element\n\n### indexOfElement(array, element) -> Integer\n\nFind the index of element in the array. `indexOfElement` returns `-1` if the element is not in `array`. `element` is a convertible.\n\n### hasElement(array, element) -> Boolean\n\nCheck if `array` contains `element`.\n\n### domListOf(array|string) -> Array\n\nCreate an Array of elements from another array, or array like list.\n\nThe array values can be convertible values.\n\nThe string value must be a CSS selector.\n\n### addElements(array, ...elements) -> added\n\nAdd elements to an array of elements. `elements` can be convertible values.\n\n### removeElements(array, ...elements) -> removed\n\nRemove elements from the array of elements. `elements` can be convertible values.\n\nAbout\n-----\n\nThese functions aren't meant to manipulate the DOM. They're only purpose is to manage a list of DOM elements.\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "node ./rollit",
    "build-test": "cd test && rollup --config rollup.test.config.js"
  },
  "version": "1.1.1"
}
