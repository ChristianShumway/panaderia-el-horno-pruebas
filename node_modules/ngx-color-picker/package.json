{
  "_args": [
    [
      {
        "raw": "ngx-color-picker@7.5.0",
        "scope": null,
        "escapedName": "ngx-color-picker",
        "name": "ngx-color-picker",
        "rawSpec": "7.5.0",
        "spec": "7.5.0",
        "type": "version"
      },
      "D:\\erget"
    ]
  ],
  "_from": "ngx-color-picker@7.5.0",
  "_hasShrinkwrap": false,
  "_id": "ngx-color-picker@7.5.0",
  "_location": "/ngx-color-picker",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ngx-color-picker_7.5.0_1554363604314_0.6968962092803559"
  },
  "_npmUser": {
    "name": "zefoy",
    "email": "devel@zef.fi"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngx-color-picker@7.5.0",
    "scope": null,
    "escapedName": "ngx-color-picker",
    "name": "ngx-color-picker",
    "rawSpec": "7.5.0",
    "spec": "7.5.0",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-color-picker/-/ngx-color-picker-7.5.0.tgz",
  "_shasum": "a1e5103b0fb0ef8aa6c8f0173d94601d263afb1a",
  "_shrinkwrap": null,
  "_spec": "ngx-color-picker@7.5.0",
  "_where": "D:\\erget",
  "bugs": {
    "url": "https://github.com/zefoy/ngx-color-picker/issues"
  },
  "dependencies": {},
  "description": "Color picker widget for Angular",
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.12.0",
    "@angular/cli": "^7.2.0",
    "@angular/common": "^7.2.0",
    "@angular/compiler": "^7.2.0",
    "@angular/compiler-cli": "^7.2.0",
    "@angular/core": "^7.2.0",
    "@angular/platform-browser": "^7.2.0",
    "@types/node": "^10.12.0",
    "codelyzer": "^4.5.0",
    "core-js": "^2.6.0",
    "cpx": "^1.5.0",
    "rollup": "^1.1.0",
    "rollup-plugin-node-resolve": "^4.0.0",
    "rollup-plugin-sourcemaps": "^0.4.0",
    "rxjs": "^6.3.0",
    "stylelint": "^9.9.0",
    "stylelint-config-standard": "^18.2.0",
    "stylelint-order": "^2.0.0",
    "terser": "^3.14.0",
    "tsickle": "^0.34.0",
    "tslint": "^5.12.0",
    "typescript": "^3.2.0",
    "watch": "^1.0.0",
    "zone.js": "^0.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-bTW16A3IitWUNGc3kZtE+N1r3FpmUj7uJTG80eym2nQLvsROkMntalKJDo1SQVQhh9Nh4N9C88UezdMg8fjR5Q==",
    "shasum": "a1e5103b0fb0ef8aa6c8f0173d94601d263afb1a",
    "tarball": "https://registry.npmjs.org/ngx-color-picker/-/ngx-color-picker-7.5.0.tgz",
    "fileCount": 38,
    "unpackedSize": 828985,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcpbTVCRA9TVsSAnZWagAAUakQAJXPR2fVQ6yXxeKkySCY\nEsuqfM5NF+H/R2XA/ZJ1Je6hJq+8eBOM62mr1ENbBonUD/hyQSE/6VpHgJNW\nofWEMytuIfLeZZeas5l2qiN0CG8gvIOzOM/XTqBawSWpPMBYECtxpR1nO47F\ndndsOS/VcLNU8PUqOUb/0/sR74JQTWmfEH/x6PGpTZW/o/3taHuXLKlc+eoq\nkS2hCpk3bA50WTYwktxPz+gbawqy0nlYQn9PL0VXAPdvGL+vZRFxpn2YP0G1\nwWzoT9nlGffL7Ss5257N/BA0VCenfmqOHCyof4Y4BDbIKmitUWKEr+BjR2R5\nIX3u9vpwAwgtK33RTvpaCo9fTzA1xPTcLPq9/+nNc7MGKoInJnpyDD8v7HIh\nEW7vrgoijPp3jNhME47Hb+vh9pXQwmsZ0Q6PVNlTxBf5YYHI5WNuz07ChvFp\nYuVDYIuMMFys97cXLCQPIMA7l0BG0GFkSTuw0WYThvLlhGIBTTkuA/e717ZC\nuNHsYUpg3WuFrVF5jpGLIKPw/ZSruzTMEnDsbzQscU44ts8yzB/YinJ7uwbK\ngIqc55rG5klCnwzbMNA8L6OTLoDEkgD8/1ChCcDZDg9AQzulYiN1bIJTMwX3\narphxYAXXAFGd6WRkTvp6vqClGHl0ZCu4hPtAgZjtZZwJ6TgKkts9fCnxqEW\nBJFQ\r\n=LzD6\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "e7b3b2ff3308b28d7887a4b61b7a6abdef330f10",
  "homepage": "https://github.com/zefoy/ngx-color-picker#readme",
  "license": "MIT",
  "main": "./bundles/ngx-color-picker.umd.js",
  "maintainers": [
    {
      "name": "zefoy",
      "email": "devel@zef.fi"
    }
  ],
  "module": "./dist/ngx-color-picker.es5.js",
  "name": "ngx-color-picker",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": ">=5.0.0",
    "@angular/core": ">=5.0.0"
  },
  "readme": "# Angular Color Picker\n\n<a href=\"https://badge.fury.io/js/ngx-color-picker\"><img src=\"https://badge.fury.io/js/ngx-color-picker.svg\" align=\"right\" alt=\"npm version\" height=\"18\"></a>\n\nThis is a simple color picker based on the cool angular2-color-picker by Alberplz.\n\nThis documentation is for the latest 5/6.x.x version which requires Angular 5 or newer. For Angular 4 you need to use the latest 4.x.x version. Documentation for the 4.x.x can be found from <a href=\"https://github.com/zefoy/ngx-color-picker/tree/4.x.x/\">here</a>.\n\n### Quick links\n\n[Example application](https://zefoy.github.io/ngx-color-picker/)\n |\n[StackBlitz example](https://stackblitz.com/github/zefoy/ngx-color-picker/tree/master/example)\n\n### Building the library\n\n```bash\nnpm install\nnpm start\n```\n\n### Running the example\n\n```bash\ncd example\nnpm install\nnpm start\n```\n\n### Library development\n\n```bash\nnpm link\ncd example\nnpm link ngx-color-picker\n```\n\n### Installing and usage\n\n```bash\nnpm install ngx-color-picker --save\n```\n\n##### Load the module for your app:\n\n```javascript\nimport { ColorPickerModule } from 'ngx-color-picker';\n\n@NgModule({\n  ...\n  imports: [\n    ...\n    ColorPickerModule\n  ]\n})\n```\n\n##### Use it in your HTML template:\n\n```html\n<input [(colorPicker)]=\"color\" [style.background]=\"color\"/>\n```\n\n```javascript\n[colorPicker]                // The color to show in the color picker dialog.\n\n[cpWidth]                    // Use this option to set color picker dialog width ('230px').\n[cpHeight]                   // Use this option to force color picker dialog height ('auto').\n\n[cpToggle]                   // Sets the default open / close state of the color picker (false).\n[cpDisabled]                 // Disables opening of the color picker dialog via toggle / events.\n\n[cpColorMode]                // Dialog color mode: 'color', 'grayscale', 'presets' ('color').\n\n[cpOutputFormat]             // Output color format: 'auto', 'hex', 'rgba', 'hsla' ('auto').\n[cpAlphaChannel]             // Alpha mode: 'enabled', 'disabled', 'always', 'forced' ('enabled').\n[cpFallbackColor]            // Used when the color is not well-formed or is undefined ('#000').\n\n[cpPosition]                 // Dialog position: 'right', 'left', 'top', 'bottom' ('right').\n[cpPositionOffset]           // Dialog offset percentage relative to the directive element (0%).\n[cpPositionRelativeToArrow]  // Dialog position is calculated relative to dialog arrow (false).\n\n[cpPresetLabel]              // Label text for the preset colors if any provided ('Preset colors').\n[cpPresetColors]             // Array of preset colors to show in the color picker dialog ([]).\n\n[cpDisableInput]             // Disables / hides the color input field from the dialog (false).\n\n[cpDialogDisplay]            // Dialog positioning mode: 'popup', 'inline' ('popup').\n                             //   popup: dialog is shown as popup (fixed positioning).\n                             //   inline: dialog is shown permanently (static positioning).\n\n[cpIgnoredElements]          // Array of HTML elements that will be ignored when clicked ([]).\n\n[cpSaveClickOutside]         // Save currently selected color when user clicks outside (true).\n[cpCloseClickOutside]        // Close the color picker dialog when user clicks outside (true).\n\n[cpOKButton]                 // Show an OK / Apply button which saves the color (false).\n[cpOKButtonText]             // Button label text shown inside the OK / Apply button ('OK').\n[cpOKButtonClass]            // Additional class for customizing the OK / Apply button ('').\n\n[cpCancelButton]             // Show a Cancel / Reset button which resets the color (false).\n[cpCancelButtonText]         // Button label text shown inside the Cancel / Reset button ('Cancel').\n[cpCancelButtonClass]        // Additional class for customizing the Cancel / Reset button ('').\n\n[cpAddColorButton]           // Show an Add Color button which add the color into preset (false).\n[cpAddColorButtonText]       // Button label text shown inside the Add Color button ('Add color').\n[cpAddColorButtonClass]      // Additional class for customizing the Add Color button ('').\n\n[cpRemoveColorButtonClass]   // Additional class for customizing the Remove Color button ('').\n\n[cpMaxPresetColorsLength]    // Use this option to set the max colors allowed in presets (null).\n\n[cpPresetEmptyMessage]       // Message for empty colors if any provided used ('No colors added').\n[cpPresetEmptyMessageClass]  // Additional class for customizing the empty colors message ('').\n\n[cpUseRootViewContainer]     // Create dialog component in the root view container (false).\n                             // Note: The root component needs to have public viewContainerRef.\n\n(colorPickerOpen)            // Current color value, send when dialog is opened (value: string).\n(colorPickerClose)           // Current color value, send when dialog is closed (value: string).\n\n(colorPickerChange)          // Changed color value, send when color is changed (value: string).\n(colorPickerCancel)          // Color select canceled, send when Cancel button is pressed (void).\n(colorPickerSelect)          // Selected color value, send when OK button is pressed (value: string).\n\n(cpToggleChange)             // Status of the dialog, send when dialog is opened / closed (open: boolean).\n\n(cpInputChange)              // Input name and its value, send when user changes color through inputs\n                             //   ({input: string, value: number | string, color: string})\n\n(cpSliderChange)             // Slider name and its value, send when user changes color through slider\n(cpSliderDragEnd)            // Slider name and current color, send when slider dragging ends (mouseup,touchend)\n(cpSliderDragStart)          // Slider name and current color, send when slider dragging starts (mousedown,touchstart)\n                             //   ({slider: string, value: number | string, color: string})\n\n(cpPresetColorsChange)       // Preset colors, send when 'Add Color' button is pressed (value: array).\n```\n\n##### Available control / helper functions (provided by the directive):\n\n```javascript\nopenDialog()                 // Opens the color picker dialog if not already open.\ncloseDialog()                // Closes the color picker dialog if not already closed.\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zefoy/ngx-color-picker.git"
  },
  "scripts": {
    "build": "npm run build:html && npm run build:css && npm run build:js",
    "build:css": "cpx src/lib/color-picker.component.css dist/lib/",
    "build:html": "cpx src/lib/color-picker.component.html dist/lib/",
    "build:js": "ngc -p src/tsconfig.json",
    "bundle": "npm run bundle:es5 ; npm run bundle:umd ; npm run minify:umd",
    "bundle:es5": "rollup -c config/rollup-es5.config.js --silent",
    "bundle:umd": "rollup -c config/rollup-umd.config.js --silent",
    "clean": "rm -rf dist bundles",
    "lint": "npm run lint:ts && npm run lint:css",
    "lint:css": "stylelint \"src/**/*.css\"",
    "lint:ts": "tslint \"src/**/*.ts\"",
    "minify:umd": "terser bundles/$npm_package_name.umd.js -o bundles/$npm_package_name.umd.min.js --source-map=\"filename=bundles/$npm_package_name.umd.min.js.map\"",
    "prepare": "npm run clean && npm run build && npm run bundle",
    "start": "npm run build && npm run bundle",
    "watch": "watch --wait=5 'npm run start' src/"
  },
  "stylelint": {
    "extends": "./stylelint.json"
  },
  "tslint": {
    "extends": "./tslint.json"
  },
  "typings": "./dist/ngx-color-picker.d.ts",
  "version": "7.5.0"
}
