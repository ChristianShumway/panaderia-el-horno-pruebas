{
  "_args": [
    [
      {
        "raw": "ngx-echarts@4.1.1",
        "scope": null,
        "escapedName": "ngx-echarts",
        "name": "ngx-echarts",
        "rawSpec": "4.1.1",
        "spec": "4.1.1",
        "type": "version"
      },
      "D:\\erget"
    ]
  ],
  "_from": "ngx-echarts@4.1.1",
  "_hasShrinkwrap": false,
  "_id": "ngx-echarts@4.1.1",
  "_location": "/ngx-echarts",
  "_nodeVersion": "10.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ngx-echarts_4.1.1_1555401935714_0.97101759173041"
  },
  "_npmUser": {
    "name": "xieziyu",
    "email": "ziyu.xie@foxmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngx-echarts@4.1.1",
    "scope": null,
    "escapedName": "ngx-echarts",
    "name": "ngx-echarts",
    "rawSpec": "4.1.1",
    "spec": "4.1.1",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-echarts/-/ngx-echarts-4.1.1.tgz",
  "_shasum": "9fed672816a39fd114602685c0e451ffada80639",
  "_shrinkwrap": null,
  "_spec": "ngx-echarts@4.1.1",
  "_where": "D:\\erget",
  "author": {
    "name": "Xie, Ziyu"
  },
  "bugs": {
    "url": "https://github.com/xieziyu/ngx-echarts/issues"
  },
  "dependencies": {
    "tslib": "^1.9.0"
  },
  "description": "<!-- Badges section here. --> [![npm](https://img.shields.io/npm/v/ngx-echarts.svg)][npm-badge-url] [![npm](https://img.shields.io/npm/dm/ngx-echarts.svg)][npm-badge-url] [![Build Status](https://travis-ci.org/xieziyu/ngx-echarts.svg?branch=master)][ci-url]",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-/lg/M8Vulx/amyAEX0U7xTTMW7THp0x8eBccbFFezapxzJzlzdszg8Bq4XM21+7Tw0HO+yR8VWoLkmywBZb0Gg==",
    "shasum": "9fed672816a39fd114602685c0e451ffada80639",
    "tarball": "https://registry.npmjs.org/ngx-echarts/-/ngx-echarts-4.1.1.tgz",
    "fileCount": 26,
    "unpackedSize": 305404,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctYzQCRA9TVsSAnZWagAA97cP+wRtx2B3ZgcEQTXmDff7\nGXVVWuu+WddeVewADvgVZTLvKbj+TJdvpxfmMnSuu5CYzHgGoEnZKzjhaogS\nCLVNBzR1Ner7DprMst+NtYC3dEwlT7MSVI5Dq7EKc9yCPFEKSa9z0hy3IP1o\nIUZSamSus2z78Im461Z0ztsQnSsHHYC5B25M6rJJBZo7nt1r9mti/exhm3YI\ng9+3Ulx9NUYa8F0xVyW7Z31a0hkL8uOoJvi+RyJVsKbP9ka/CekHNFSySAQs\nUrm62rVcpsAginCMThUsbErXkTYXIrRNE7GTK7iKUf1UCeE0P/haBLNZfjpy\n7CYxM893CauiUdDdTRJ2JW0InaoOrqrZhJbI1Bj+7dsmeAZVf5m+Znl8S+CP\nHG8G7Cfv9e4rtV96KaI9xr5Wtzox97BXj0v8Tg4xRxUN3uoxYOBrpZnd5SZS\nXEhB2ZLM1PvuIZ4VG2xQ0GnExaJaiGFB0sf+2DZS3Ui9ts7cBADc3mMv/iKC\nHOliWEqjV5QqnbZYKVk4EdZHYDQYs2ydOMg+InX8y22DF0rfuFj86Dxq3Qbz\nDrbCUmiVmJLabToxfCPyZEY+SglPvaHfdRObu6/+dioEyFWP6PBE0PZ/6gV3\niJBe8PFpVozw8EIrYWftlgNVU0O7NORRGCOWy/s8/OJm6W4VDExY81/EePFD\nA6em\r\n=Bl72\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "es2015": "fesm2015/ngx-echarts.js",
  "esm2015": "esm2015/ngx-echarts.js",
  "esm5": "esm5/ngx-echarts.js",
  "fesm2015": "fesm2015/ngx-echarts.js",
  "fesm5": "fesm5/ngx-echarts.js",
  "homepage": "https://xieziyu.github.io/ngx-echarts",
  "keywords": [
    "angular",
    "ng",
    "echarts",
    "chart"
  ],
  "license": "MIT",
  "main": "bundles/ngx-echarts.umd.js",
  "maintainers": [
    {
      "name": "xieziyu",
      "email": "xieziyu@foxmail.com"
    }
  ],
  "metadata": "ngx-echarts.metadata.json",
  "module": "fesm5/ngx-echarts.js",
  "name": "ngx-echarts",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/common": "^6.0.0-rc.0 || >=6.0.0",
    "@angular/core": "^6.0.0-rc.0 || >=6.0.0",
    "echarts": ">=3.1.1"
  },
  "readme": "# ngx-echarts\n<!-- Badges section here. -->\n[![npm](https://img.shields.io/npm/v/ngx-echarts.svg)][npm-badge-url]\n[![npm](https://img.shields.io/npm/dm/ngx-echarts.svg)][npm-badge-url]\n[![Build Status](https://travis-ci.org/xieziyu/ngx-echarts.svg?branch=master)][ci-url]\n\nAngular directive for echarts (version >= 3.x) (The project is renamed from **angular2-echarts**)\n\n+ [Online Demo](https://xieziyu.github.io/ngx-echarts)\n+ [Online Docs](https://xieziyu.github.io/ngx-echarts/api-doc)\n+ [Starter Project](https://github.com/xieziyu/ngx-echarts-starter)\n\n## Table of contents \n1. [Getting Started](#getting-started)\n2. [Latest Update](#latest-update)\n3. [Installation](#installation)\n4. [Usage](#usage)\n5. [API](#api)\n6. [Events](#events)\n7. [Demo](#demo)\n\n# Getting Started\n`ngx-echarts` is an Angular (ver >= 2.x) directive for ECharts (ver >= 3.x).\n\nLatest version @npm:\n+ `v4.1.0` for Angular >= 6\n+ `v2.3.1` for Angular < 6 (Please refer to https://github.com/xieziyu/ngx-echarts/blob/v2.x/README.md)\n\nA starter project on Github: https://github.com/xieziyu/ngx-echarts-starter\n\n# Latest Update\n+ 2019.04.16: v4.1.1\n  + Bugfix: not call 'unsubscribe' when 'this.resizeSub' is undefined. (by [Tian-Hun](https://github.com/Tian-Hun) - [PR #165](https://github.com/xieziyu/ngx-echarts/pull/165))\n\n+ 2018.12.16: v4.1.0\n  + Perfomance update: echarts events are now lazily bounded, so it won't trigger change dectection unexpectedly. Please refer to [PR #154](https://github.com/xieziyu/ngx-echarts/pull/154) for more details. Thanks to [smnbbrv](https://github.com/smnbbrv)!\n  + `[detectEventChanges]` is now deprecated.\n  + Plenty of echarts event are now [supported](#events).\n\n+ 2018.11.11: v4.0.1\n  + Add map events support: (chartMapSelectChanged), (chartMapSelected), (chartMapUnselected). (by [amirch1](https://github.com/amirch1) - [PR #147](https://github.com/xieziyu/ngx-echarts/pull/147))\n\n+ 2018.08.20: v4.0.0\n  + Change: ECharts instance creating is delayed until view initialized.\n  + New: [detectEventChanges] Use it to avoid unwanted change detections.\n    + If you set it false, `chartClick` and some other event-emitters become silent. [demo](https://xieziyu.github.io/ngx-echarts/#/usage/events)\n  + Change: [theme] now detect changes at runtime. \n    + When you change theme at runtime, the chart would be destroyed first and then initialized again. [demo](https://xieziyu.github.io/ngx-echarts/#/usage/theme)\n  + **BREAKING CHANGES**:\n    + ES6 import instead of polluting global namespace. [issue #123](https://github.com/xieziyu/ngx-echarts/issues/123)\n    + NgxEchartsService is now obsoleted. If you want to use echarts API, please just import it\n    ```typescript\n    import * as echarts from 'echarts';\n    /** or */\n    import { graphic, registerMap } from 'echarts';\n    ```\n    + Import echarts theme files or other extension files in `main.ts`. Refer to [ECharts Extensions](#echarts-extensions)\n\n+ 2018.07.24: v3.2.0 & v2.3.1:\n  + New: [autoResize] now detects its container element's offset height.\n  + Change: Resizing detection is now debounced.\n\n+ 2018.06.13: v3.1.0 & v2.2.0:\n  + New: [autoResize] now detects its container element's offset width. Especially useful for charts inside `<ng-template>` such as NG-ZORRO components.\n\n+ 2018.06.12: v3.0.1 & v2.1.1:\n  + Bugfix: Line chart is not animated on init. [issue#102](https://github.com/xieziyu/ngx-echarts/issues/102)\n\n+ 2018.05.08: v3.0.0:\n  + Change: Support Angular 6\n  + Docs: generate demo app by @angular/cli-6.0.0\n\n+ 2018.03.14: v2.1.0\n  + New: `[loadingOpts]` to customize loading style. Refer to [API](#api)\n  + Bugfix: double check `dom.style.height` before setting default value.\n\n+ 2018.02.07: v2.0.2. New: `[autoResize]` input (default: true). [PR #73](https://github.com/xieziyu/ngx-echarts/pull/73) by [arethore-actility](https://github.com/arethore-actility)\n\n+ 2017.12.11: v2.0.1. Fix issue: No change detection involved in event handler. Refer to issue [#26](https://github.com/xieziyu/ngx-echarts/issues/26), [#28](https://github.com/xieziyu/ngx-echarts/issues/28)\n\n+ 2017.12.04: v2.0.0. Provide an echarts wrapper service: NgxEchartsService.\n\n+ 2017.11.25: v2.0.0-beta.0. It has some [BREAKING CHANGES](https://github.com/xieziyu/ngx-echarts/blob/master/src/assets/CHANGELOG.md) you should know.\n\n# Installation\n+ Since v4.0\n  ```bash\n  # if you use npm\n  npm install echarts -S\n  npm install ngx-echarts -S\n  npm install @types/echarts -D\n\n  # or if you use yarn\n  yarn add echarts\n  yarn add ngx-echarts\n  yarn add @types/echarts -D\n  ```\n\n+ If you need ECharts GL support, please install it first:\n  ```bash\n  npm install echarts-gl -S\n\n  # or\n  yarn add echarts-gl\n  ```\n\n+ Import other extentions such as themes or `echarts-gl` in your `main.ts`: [ECharts Extensions](#echarts-extensions)\n\n\n## Upgrade from v3.x\n1. Install `@types/echarts`\n2. Import necessary theme or extension files in `main.ts`. Refer to [ECharts Extensions](#echarts-extensions).\n3. Remove `echarts` related scripts in `angular.json`.\n\n# Usage\nPlease refer to the [demo](https://xieziyu.github.io/ngx-echarts) page.\n\n1. Firstly, import `NgxEchartsModule` in your app module (or any other proper angular module):\n    ```typescript\n    import { NgxEchartsModule } from 'ngx-echarts';\n\n    @NgModule({\n      imports: [\n        ...,\n        NgxEchartsModule\n      ],\n      ...\n    })\n    export class AppModule { }\n    ```\n\n2. Then: use `echarts` directive in a div which has **pre-defined height**. (From v2.0, it has default height: 400px)\n    + Simple example:\n\n      + html:\n      ```html\n      <div echarts [options]=\"chartOption\" class=\"demo-chart\"></div>\n      ```\n\n      + scss:\n      ```css\n      .demo-chart {\n        height: 400px;\n      }\n      ```\n\n      + component:\n      ```typescript\n      import { EChartOption } from 'echarts';\n      \n      // ...\n      \n      chartOption: EChartOption = {\n        xAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\n          type: 'line'\n        }]\n      }\n      ```\n\n# API\n### Directive\n`echarts` directive support following input porperties:\n\n| Input | Type | Default | Description |\n|-------|------|---------|-------------|\n| `[options]` | object | null | It's the same with the options in official demo site. |\n| `[merge]` | object | null | You can use it to update part of the `options`, especially helpful when you need to update the chart data. In fact, the value of `merge` will be used in `echartsInstance.setOption()` with `notMerge = false`. So you can refer to [ECharts documentation](https://ecomfe.github.io/echarts-doc/public/en/api.html#echartsInstance.setOption) for details |\n| `[loading]` | boolean | false | Use it to toggle the echarts loading animation when your data is not ready. |\n| `[autoResize]` | boolean | true | Charts will be automatically resized when container's width changed. |\n| `[initOpts]` | object | null | The value of `[initOpts]` will be used in `echarts.init()`. It may contain `devicePixelRatio`, `renderer`, `width` or `height` properties. Refer to [ECharts documentation](https://ecomfe.github.io/echarts-doc/public/en/api.html#echarts.init) for details |\n| `[theme]` | string | null | Use it to init echarts with theme. You need to import the theme file in `main.ts`. |\n| `[loadingOpts]` | object | null | Input an object to customize loading style. Refer to [ECharts documentation](https://ecomfe.github.io/echarts-doc/public/en/api.html#echartsInstance.showLoading) for details. |\n| `[detectEventChanges]` | boolean | true | Whether to register mouse event handlers on echartInstance. Use it to avoid unwanted change detections. |\n\nBy default, `loadingOpts` is:\n\n```javascript\n{\n  text: 'loading',\n  color: '#c23531',\n  textColor: '#000',\n  maskColor: 'rgba(255, 255, 255, 0.8)',\n  zlevel: 0\n}\n```\n\n### ECharts API\nIf you need echarts API such as `echarts.graphic`, please import it from echarts. For example:\n\n```typescript\n/** import all */\nimport * as echarts from 'echarts';\n\nnew echarts.graphic.LinearGradient(/** ... */);\n\n/** or you can */\nimport { graphic } from 'echarts';\n\nnew graphic.LinearGradient(/** ... */);\n```\n\n### ECharts Instance\n`echartsInstance` is exposed (since v1.1.6) in `(chartInit)` event. So you can directly call the APIs just like: `resize()`, `showLoading()`, etc. For example:\n\n+ html:\n\n```html\n<div echarts class=\"demo-chart\" [options]=\"chartOptions\" (chartInit)=\"onChartInit($event)\"></div>\n```\n\n+ component:\n\n```typescript\nonChartInit(ec) {\n  this.echartsIntance = ec;\n}\n\nresizeChart() {\n  if (this.echartsIntance) {\n    this.echartsIntance.resize();\n  }\n}\n```\n\n### ECharts Extensions\nImport echarts theme files or other extension files in `main.ts`. For example:\n\n  ```typescript\n  import { enableProdMode } from '@angular/core';\n  import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n  import { AppModule } from './app/app.module';\n  import { environment } from './environments/environment';\n\n  /** echarts extensions: */\n  import 'echarts-gl';\n  import 'echarts/theme/macarons.js';\n  import 'echarts/dist/extension/bmap.min.js';\n\n  if (environment.production) {\n    enableProdMode();\n  }\n\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n  ```\n\n### Service\n`NgxEchartsService` has been obsoleted since v4.0\n\n# Events\nAs echarts support the `'click'`, `'dblclick'`, `'mousedown'`, `'mouseup'`, `'mouseover'`, `'mouseout'`, `'globalout'` mouse events, our `ngx-echarts` directive also support the same mouse events but with additional `chart` prefix.\n\n  + html:\n\n  ```html\n  <div echarts class=\"demo-chart\" [options]=\"chartOptions\" (chartClick)=\"onChartClick($event)\"></div>\n  ```\n\n  + The '$event' is same with the 'params' that Echarts dispatches\n\nIt supports following event outputs:\n\n| @Output | Event |\n| ------- | ----- |\n| chartInit | Emitted when chart is intialized |\n| chartClick | echarts event: `'click'` |\n| chartDblClick | echarts event: `'dblclick'` |\n| chartMouseDown | echarts event: `'mousedown'` |\n| chartMouseMove | echarts event: `'mousemove'` |\n| chartMouseUp | echarts event: `'mouseup'` |\n| chartMouseOver | echarts event: `'mouseover'` |\n| chartMouseOut | echarts event: `'mouseout'` |\n| chartGlobalOut | echarts event: `'globalout'` |\n| chartContextMenu | echarts event: `'contextmenu'` |\n| chartLegendSelectChanged | echarts event: `'legendselectchanged'` |\n| chartLegendSelected | echarts event: `'legendselected'` |\n| chartLegendUnselected | echarts event: `'legendunselected'` |\n| chartLegendScroll | echarts event: `'legendscroll'` |\n| chartDataZoom | echarts event: `'datazoom'` |\n| chartDataRangeSelected | echarts event: `'datarangeselected'` |\n| chartTimelineChanged | echarts event: `'timelinechanged'` |\n| chartTimelinePlayChanged | echarts event: `'timelineplaychanged'` |\n| chartRestore | echarts event: `'restore'` |\n| chartDataViewChanged | echarts event: `'dataviewchanged'` |\n| chartMagicTypeChanged | echarts event: `'magictypechanged'` |\n| chartPieSelectChanged | echarts event: `'pieselectchanged'` |\n| chartPieSelected | echarts event: `'pieselected'` |\n| chartPieUnselected | echarts event: `'pieunselected'` |\n| chartMapSelectChanged | echarts event: `'mapselectchanged'` |\n| chartMapSelected | echarts event: `'mapselected'` |\n| chartMapUnselected | echarts event: `'mapunselected'` |\n| chartAxisAreaSelected | echarts event: `'axisareaselected'` |\n| chartFocusNodeAdjacency | echarts event: `'focusnodeadjacency'` |\n| chartUnfocusNodeAdjacency | echarts event: `'unfocusnodeadjacency'` |\n| chartBrush | echarts event: `'brush'` |\n| chartBrushSelected | echarts event: `'brushselected'` |\n| chartRendered | echarts event: `'rendered'` |\n| chartFinished | echarts event: `'finished'` |\n\n\nYou can refer to the echarts tutorial: [Events and Actions in ECharts](https://ecomfe.github.io/echarts-doc/public/en/tutorial.html#Events%20and%20Actions%20in%20ECharts) for more details of the event params. You can also refer to the [demo](https://xieziyu.github.io/#/ngx-echarts/demo) page for the detailed example.\n\n# Demo\nYou can clone this repo to your working copy and then launch the demo page in your local machine:\n```bash\nnpm install\nnpm run demo\n\n# or\nyarn install\nyarn demo\n```\nThe demo page server is listening to: http://localhost:4202\n\n\n[npm-badge-url]: https://www.npmjs.com/package/ngx-echarts\n[ci-url]: https://travis-ci.org/xieziyu/ngx-echarts\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xieziyu/ngx-echarts.git"
  },
  "sideEffects": false,
  "typings": "ngx-echarts.d.ts",
  "version": "4.1.1"
}
